{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","query","status","DefaultState","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","dispatch","currentTodos","useMemo","newTodos","title","toLowerCase","includes","completed","length","className","map","id","onClick","currentTodoActions","handleClick","TodoFilter","setQuery","onSubmit","event","preventDefault","value","onChange","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","isLoading","setIsLoading","user","setUser","useEffect","userId","finally","href","email","name","App","todosActions","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba00276d.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetQuery = { type: 'filter/QUERY', payload: string };\ntype SetStatus = { type: 'filter/STATUS', payload: Status };\n\nconst setQuery = (query: string): SetQuery => ({\n  type: 'filter/QUERY',\n  payload: query,\n});\nconst setStatus = (status: Status): SetStatus => ({\n  type: 'filter/STATUS',\n  payload: status,\n});\n\nexport const actions = { setQuery, setStatus };\n\ntype Filter = {\n  query: string,\n  status: Status,\n};\ntype Action = SetQuery | SetStatus;\n\nconst DefaultState: Filter = {\n  query: '',\n  status: 'all',\n};\n\nconst filterReducer = (\n  state: Filter = DefaultState,\n  action: Action,\n): Filter => {\n  switch (action.type) {\n    case 'filter/QUERY':\n      return { ...state, query: action.payload };\n\n    case 'filter/STATUS':\n      return { ...state, status: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype AddTodos = { type: 'todos/ADD', payload: Todo[] };\n\nconst addTodos = (todos: Todo[]): AddTodos => (\n  { type: 'todos/ADD', payload: todos }\n);\n\nexport const actions = { addTodos };\n\ntype Action = AddTodos;\n\nconst todosReducer = (\n  state: Todo[] = [],\n  action: Action,\n): Todo[] => {\n  switch (action.type) {\n    case 'todos/ADD':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React, { useMemo } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { Todo } from '../../types/Todo';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\n\nexport const TodoList: React.FC = () => {\n  const todos = useAppSelector(state => state.todos);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const filter = useAppSelector(state => state.filter);\n  const dispatch = useAppDispatch();\n\n  const handleClick = (todo: Todo) => {\n    dispatch(currentTodoActions.setTodo(todo));\n  };\n\n  const currentTodos = useMemo(() => {\n    if (filter.query === '' && filter.status === 'all') {\n      return todos;\n    }\n\n    let newTodos = [...todos];\n\n    if (filter.query) {\n      newTodos = newTodos.filter(todo => todo.title.toLowerCase().includes(filter.query.toLowerCase()));\n    }\n\n    switch (filter.status) {\n      case 'all':\n        return newTodos;\n\n      case 'active':\n        return newTodos.filter(todo => !todo.completed);\n\n      case 'completed':\n        return newTodos.filter(todo => todo.completed);\n\n      default:\n        return newTodos;\n    }\n  }, [todos, filter]);\n\n  return (\n    <>\n      {currentTodos.length === 0 ? (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      ) : (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {currentTodos.map(todo => (\n              <tr data-cy=\"todo\" key={todo.id}>\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  {todo.completed ? (\n                    <span className=\"icon\" data-cy=\"iconCompleted\"><i className=\"fas fa-check\" /></span>\n                  ) : (' ')}\n                </td>\n\n                <td className=\"is-vcentered is-expanded\">\n                  <p className={todo.completed ? 'has-text-success' : 'has-text-danger'}>{todo.title}</p>\n                </td>\n\n                <td className=\"has-text-right is-vcentered\">\n                  <button data-cy=\"selectButton\" className=\"button\" type=\"button\" onClick={() => handleClick(todo)}>\n                    <span className=\"icon\">\n                      <i\n                        className={currentTodo?.id === todo.id ? 'far fa-eye-slash' : 'far fa-eye'}\n                      />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const filter = useAppSelector(state => state.filter);\n  const dispatch = useAppDispatch();\n\n  const setQuery = (query: string) => dispatch(actions.setQuery(query));\n  const setFilter = (value: Status) => dispatch(actions.setStatus(value));\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter.status}\n            onChange={event => setFilter(event.target.value as Status)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filter.query}\n          onChange={event => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {filter.query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const [isLoading, setIsLoading] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (!currentTodo) {\n      return;\n    }\n\n    setIsLoading(true);\n    getUser(currentTodo.userId)\n      .then(setUser)\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading && (<Loader />)}\n\n      {!isLoading && user && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => dispatch(currentTodoActions.removeTodo())}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">{currentTodo?.title}</p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n              <a href={`mailto:${user.email}`}>{user.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { getTodos } from './api';\nimport { actions as todosActions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then(res => dispatch(todosActions.addTodos(res)))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (<Loader />) : (<TodoList />)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && (<TodoModal />)}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}